#!/bin/bash
# 
# Build daily PPA
#

# Load profile
[ -f $HOME/.profile ] && . $HOME/.profile

# Branch and PPA
BRANCH=$1
PPA=$2
[ -z "$BRANCH" ] && BRANCH="master"
[ -z "$PPA"    ] && PPA="unstable"

# Load BASH settings
[ -f $HOME/.bashrc ] && . $HOME/.bashrc

# Git URL
GITURL=git://github.com/tvheadend/tvheadend.git

# Logging
LOGPATH=$HOME/.tvh/daily.log
REFPATH=$HOME/.tvh/${PPA/\//_}.ref
TMPDIR=/tmp/tvh-daily-$$
export DEBFULLNAME="Tvheadend (Package Signing Key)"
export DEBEMAIL="apt@tvheadend.org"

function log
{
  echo "$(date +'%F %T') [$(basename $0)] $*"
}

# Setup logging
mkdir -p $(dirname $LOGPATH)
#exec 2>&1
#exec 1> $LOGPATH
log "begin"

# Remove dir on exit
trap "rm -rf $TMPDIR" EXIT

# Create dir
log "create TMPDIR=$TMPDIR"
mkdir -p $TMPDIR || exit 1
cd $TMPDIR || exit 1

# Determine branch
REF=""
if [ "${BRANCH}" = "AUTO" ]; then
  if [ "${PPA}" = "release" ]; then
    T=$(git ls-remote --tags ${GITURL} | grep -v "\^{}$" | awk '{sub(/refs\/tags\//,"");print $2":"$1}' | grep v[0-9].[02468] | sort | tail -n 1)
    BRANCH=$(echo $T | cut -d: -f1)
    REF=$(echo $T | cut -d: -f2)
  elif [ "${PPA}" = "stable" ]; then
    T=$(git ls-remote --heads ${GITURL} release/* | awk '{sub(/refs\/heads\//,"");print $2":"$1}' | sort | tail -n 1)
    BRANCH=$(echo $T | cut -d: -f1)
    REF=$(echo $T | cut -d: -f2)
  else
    BRANCH=master
  fi
fi
[ -z "$REF" ] && REF=$(git ls-remote ${GITURL} ${BRANCH} | awk '{print $1}')
if [ -z "$REF" ]; then
  log "ERROR invalid branch ${BRANCH}"
  exit 1
fi
log "using branch/tag ${BRANCH}"

# Check ref
log "checking reference ${REF}"
[ -f "$REFPATH" ] && old=$(cat $REFPATH) || old=""
if [ "$REF" == "$old" ]; then
  log "no change"
  exit 0
fi

# Download
log "git clone"
git clone ${GITURL} tvheadend || exit 1

# Create configuration file
C=$TMPDIR/pbuilder.conf.$$
echo > $C
[ ! -z "$BINTRAY_USER" ] && echo "export BINTRAY_USER=$BINTRAY_USER" >> $C
[ ! -z "$BINTRAY_PASS" ] && echo "export BINTRAY_USER=$BINTRAY_PASS" >> $C
[ ! -z "$BINTRAY_REPO" ] && echo "export BINTRAY_USER=$BINTRAY_REPO" >> $C

# Setup pbuilder options
export PBUILDER_OPTS="$PBUILDER_OPTS --configfile ${C}"

# Upload
log "build"
#cd tvheadend && git checkout ${BRANCH} && ./support/apt-update $BRANCH $PPA || exit 1
echo $REF > $REFPATH

# Done
log "done"

